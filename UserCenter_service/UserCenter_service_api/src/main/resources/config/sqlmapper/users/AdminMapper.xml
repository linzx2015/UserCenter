<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kkk.usercenter.users.dao.IAdminDao">
	<insert id="insertOne" parameterType="com.kkk.usercenter.users.pojo.AAdmins" useGeneratedKeys="true" keyProperty="id">
		insert into a_admins 
		(roleId,email,password,trueName,phone,qq,loginFailedCount,loginFailedTime,status,createTime,updateTime,lastLoginTime) 
		values 
		(#{roleId},#{email},#{password},#{trueName},#{phone},#{qq},#{loginFailedCount},#{loginFailedTime},#{status},#{createTime},#{updateTime},#{lastLoginTime})
	</insert>
	<update id="updateOne" parameterType="com.kkk.usercenter.users.pojo.AAdmins">
		update a_admins 
		<set>
		  roleId=#{roleId},email=#{email},password=#{password},trueName=#{trueName},phone=#{phone},qq=#{qq},loginFailedCount=#{loginFailedCount},loginFailedTime=#{loginFailedTime},status=#{status},createTime=#{createTime},updateTime=#{updateTime},lastLoginTime=#{lastLoginTime} 
		</set> 
		where (id=#{id})
	</update>
	<delete id="deleteOne" parameterType="com.kkk.usercenter.users.pojo.AAdmins">
		delete from a_admins 
		<where>
			<if test="id!=null">
				id=#{id}
			</if>
		</where>
	</delete>
	<!-- 暂时没有关联其他表,没写自定义map -->
	<select id="queryOne" parameterType="map" resultMap="adminMap">
		select * from a_admins
		<where>
			<if test="id!=null and id!=''">
			 	and id=#{id}
			</if>
			<!-- 根据邮箱查询 -->
			<if test="email!=null and email!=''">
				and email=#{email}
			</if>
		</where>
	</select>
	
	<!-- 自定义结果类型 -->
	<resultMap type="com.kkk.usercenter.users.pojo.AAdmins" id="adminMap">
		<id column="id" property="id"/>
		<result column="roleId" property="roleId"/>
		
		<association property="role" column="roleId" javaType="com.kkk.usercenter.users.pojo.ARole" select="queryOneRole"/>
	</resultMap>
	
	<select id="queryOneRole" resultType="com.kkk.usercenter.users.pojo.ARole">
		select * from a_role where id=#{roleId}
	</select>
	
	<!-- 分页查询,通过分页条件进行区别是否进行分页查询 -->
	<!-- 查询多条记录
	原始SQL:select * from a_admins where status = #{status} and updateTime >= #{stDate} and updateTime < #{edDate} order by lastLoginTime desc
	总记录数的SQL:select count(*) from a_admins where status = #{status} and updateTime >= #{stDate} and updateTime < #{edDate} 
	分页的SQL:select * from a_admins where status = #{status} and updateTime >= #{stDate} and updateTime < #{edDate} order by lastLoginTime desc limit ? ,?
	
	map中的键:
	pageCond == 'true',分页查询总记录数
	pageCond == 'false',分页查询记录
	pageCoud = 不传的时候,不分页,查询所有记录
	-->
	<!-- 查询多条记录,分页 -->
	<select id="queryMulti" parameterType="map" resultMap="adminMap">
		<choose>
			<when test="pageCond=='true'">
				select count(*) as id from a_admins 
			</when>
			<otherwise>
				select * from a_admins
			</otherwise>
		</choose>
		<where>
			<if test="keywords!=null and keywords!=''">
				and (email like #{keywords} or trueName like #{keywords} or qq like #{keywords} or phone like #{keywords})
			</if>
			<if test="status!=null">
				and status=#{status}
			</if>
			<if test="stDate!=null and edDate!=null">
				<![CDATA[
					and updateTime>=#{stDate} and updateTime<#{edDate}
				]]> 
			</if>
		</where>
		<!-- 当pageCond为true时,查询全部记录 -->
		<choose>
			<when test="pageCond=='true'">
			</when>
			<otherwise>
				<choose>
					<!-- 不分页取记录 -->
					<when test="orderby=='createTimeAsc'">
						order by createTime asc
					</when>
					<otherwise>
						order by lastLoginTime desc
					</otherwise>
				</choose>
			</otherwise>
		</choose>
		<!-- 分页 -->
		<choose>
			<!-- 查总记录数 -->
			<when test="pageCond=='true'">
			</when>
			<when test="pageCond=='false'">
				limit #{currentRecord},#{pageSize}
			</when>
		</choose>
	</select>
</mapper>
  
  
  
  

